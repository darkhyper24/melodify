openapi: 3.0.0
info:
  title: Melodify api
  description: api for a very *Melodifying* experience
  version: 1.0.0

servers:
  - url: http://localhost:8787
    description: localhost server for testing.

paths:
  /auth/signup:
    post:
      tags: [authentication]
      summary: register new user
      description: Create a new user and add it to the system
      requestBody: 
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/Signup'
      responses: 
        '201':
          description: added new user to system
        '400':
          description: invalid credintals
        '500':
          description: server did not respond

  /auth/login:
    post:
      tags: [authentication]
      summary: login user
      description: logins registered user to system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses: 
        '200':
          description: Added new user to system
        '400':
          description: user already registered
        '500':
          description: server did not respond

  /auth/logout:
    post:
      tags: [authentication]
      summary: logout user
      description: logout registered user from system if session is active
      security:
        - bearerAuth: []
      responses: 
        '200':
          description: user logged out of the system
        '401':
          description: invalid token
        '500':
          description: server did not respond

  /auth/login/google:
    post:
      tags: [authentication]
      summary: login user with google
      description: redirects user to google account
      responses: 
        '200':
          description: user logged in the system
        '401':
          description: invalid token
        '500':
          description: server did not respond

  /auth/login/facebook:
    post:
      tags: [authentication]
      summary: login user with facebook
      description: redirects user to facebook account
      responses: 
        '200':
          description: user logged in the system
        '401':
          description: invalid token
        '500':
          description: server did not respond

components:
  schemas:
    Signup:
      type: object
      required: 
        - name
        - password
        - email
      properties:
        name:
          type: string
          example: johm
        password:
          type: string
          format: password
          example: kunafo
        email:
          type: string
          format: email
          example: unminru@gmail.com
  
    Login:
      type: object
      required: 
        - password
        - email
      properties:
        password:
          type: string
          format: password
          example: kunafo
        email:
          type: string
          format: email
          example: unminru@gmail.com
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication


# Add these paths after your existing auth endpoints

  /profile:
    get:
      tags: [profile]
      summary: Get user profile
      description: Retrieves the current user's profile information
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      fullName:
                        type: string
                      phone:
                        type: string
                        nullable: true
                      email:
                        type: string
                      avatarUrl:
                        type: string
                        nullable: true
                      bio:
                        type: string
                        nullable: true
        '401':
          description: Unauthorized - invalid or expired token
        '404':
          description: Profile not found
        '500':
          description: Server error

  /profile/upload:
    post:
      tags: [profile]
      summary: Upload profile avatar
      description: Uploads a new profile picture and updates the user's avatar URL
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                  description: Image file (JPEG, PNG, WebP) max 2MB
      responses:
        '200':
          description: Avatar uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Avatar uploaded and profile updated successfully
                  avatarUrl:
                    type: string
                    example: https://example.supabase.co/storage/v1/object/public/avatars/user-id/12345.jpeg
        '400':
          description: Invalid request - missing or invalid file
        '401':
          description: Unauthorized - invalid or expired token
        '500':
          description: Server error

  /profile/update:
    patch:
      tags: [profile]
      summary: Update profile information
      description: Updates the user's profile information (full name, bio, phone)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  example: John Doe
                bio:
                  type: string
                  example: Music enthusiast and aspiring producer
                phone:
                  type: string
                  example: +1234567890
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile updated successfully
                  updated:
                    type: object
                    properties:
                      fullName:
                        type: string
                        nullable: true
                      bio:
                        type: string
                        nullable: true
                      phone:
                        type: string
                        nullable: true
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized - invalid or expired token
        '500':
          description: Server error


  /albums:
    get:
      tags: [albums]
      summary: Get all albums
      description: Retrieves a list of all albums with their names and album covers
      responses:
        '200':
          description: Successfully retrieved albums
          content:
            application/json:
              schema:
                type: object
                properties:
                  albums:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: "Greatest Hits"
                        albumPic:
                          type: string
                          nullable: true
                          example: "https://example.supabase.co/storage/v1/object/public/album_covers/album-id/cover.jpg"
        '500':
          description: Server error